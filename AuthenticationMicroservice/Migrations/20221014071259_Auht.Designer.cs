// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

#nullable disable

namespace AuthenticationMicroservice.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221014071259_Auht")]
    partial class Auht
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositories.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f7e348b-82d2-4081-9bcc-bb3ef8e0fff3"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 12, 59, 215, DateTimeKind.Utc).AddTicks(5536),
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("fd010e4d-cd37-4ca9-a98a-222c32e90e4a"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 12, 59, 215, DateTimeKind.Utc).AddTicks(5540),
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c2b3665-df04-4938-8a78-5ad0db67182c"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 12, 58, 971, DateTimeKind.Utc).AddTicks(8028),
                            EmailAddress = "SonicHedgehog@gmail.com",
                            Password = "$2a$11$OGrzACnKXpVtzi4BPtGG/.frca7BZzcI1XPdESf3rVPYtvmqtxv5m",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("8f7e348b-82d2-4081-9bcc-bb3ef8e0fff3"),
                            Username = "Sonic"
                        },
                        new
                        {
                            Id = new Guid("ecb68204-0d99-4b2d-9d55-c4b7351af908"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 12, 59, 96, DateTimeKind.Utc).AddTicks(2826),
                            EmailAddress = "User@gmail.com",
                            Password = "$2a$11$N8XwZ6bno9hJyFp/PkPmv.Kb6GKoW9jOhc1.0LdANi..661PaY.xG",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("fd010e4d-cd37-4ca9-a98a-222c32e90e4a"),
                            Username = "User"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.UserEntity", b =>
                {
                    b.HasOne("Repositories.Entities.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Repositories.Entities.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
