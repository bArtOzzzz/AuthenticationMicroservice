// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

#nullable disable

namespace AuthenticationMicroservice.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230109092917_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositories.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2c3f37f-fba5-45ff-a25f-5e95c071f6aa"),
                            CreatedDate = new DateTime(2023, 1, 9, 9, 29, 17, 567, DateTimeKind.Utc).AddTicks(2342),
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("75d1350d-85bf-43b6-bc56-31a2812940a2"),
                            CreatedDate = new DateTime(2023, 1, 9, 9, 29, 17, 567, DateTimeKind.Utc).AddTicks(2345),
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d03d3dc3-6749-47b8-8cac-d6db024209a2"),
                            CreatedDate = new DateTime(2023, 1, 9, 9, 29, 17, 332, DateTimeKind.Utc).AddTicks(8133),
                            EmailAddress = "SonicHedgehog@gmail.com",
                            Password = "$2a$11$piUZWqUWiDgR0DEGSWRLwOPNfIaJUmAO1l660x1QElEV/Vqm31Ny2",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("b2c3f37f-fba5-45ff-a25f-5e95c071f6aa"),
                            Username = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("4de2202a-acb1-456e-8de0-ba8a970a2837"),
                            CreatedDate = new DateTime(2023, 1, 9, 9, 29, 17, 449, DateTimeKind.Utc).AddTicks(9063),
                            EmailAddress = "User@gmail.com",
                            Password = "$2a$11$ad1EzdllZcDfz36YPCJ40.18fxD9morfQLCl4y2iVT2c4t5exBJhO",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("75d1350d-85bf-43b6-bc56-31a2812940a2"),
                            Username = "User"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.UserEntity", b =>
                {
                    b.HasOne("Repositories.Entities.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Repositories.Entities.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
