// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

#nullable disable

namespace AuthenticationMicroservice.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositories.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23b8fdd2-5f83-47d9-96ee-19cefbc356cf"),
                            CreatedDate = new DateTime(2022, 10, 2, 10, 18, 28, 288, DateTimeKind.Utc).AddTicks(6977),
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("55b14b79-f497-4b37-aaaa-3cf57ba31cd8"),
                            CreatedDate = new DateTime(2022, 10, 2, 10, 18, 28, 288, DateTimeKind.Utc).AddTicks(6982),
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66316569-18ae-4096-8158-670804d563a0"),
                            CreatedDate = new DateTime(2022, 10, 2, 10, 18, 28, 56, DateTimeKind.Utc).AddTicks(4184),
                            EmailAddress = "SonicHedgehog@gmail.com",
                            Password = "$2a$11$9bJrCsPmbvMHkpA9/mH6pOJJh2Jj65JqkWd5oGBzydPcFPxeDtJIS",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("23b8fdd2-5f83-47d9-96ee-19cefbc356cf"),
                            Username = "Sonic"
                        },
                        new
                        {
                            Id = new Guid("7463359d-a42e-43b0-9e4a-05d3d28b030a"),
                            CreatedDate = new DateTime(2022, 10, 2, 10, 18, 28, 172, DateTimeKind.Utc).AddTicks(7474),
                            EmailAddress = "User@gmail.com",
                            Password = "$2a$11$5vScpRVLsFqdrDjcChKO0ex474weGUpvOotWqtia2YbRdFh6mUtNu",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("55b14b79-f497-4b37-aaaa-3cf57ba31cd8"),
                            Username = "User"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.UserEntity", b =>
                {
                    b.HasOne("Repositories.Entities.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Repositories.Entities.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
