// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

#nullable disable

namespace AuthenticationMicroservice.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221215092634_AuthenticationMigration")]
    partial class AuthenticationMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositories.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8aa7be75-8787-467c-abc0-2da4fb96cc06"),
                            CreatedDate = new DateTime(2022, 12, 15, 9, 26, 34, 428, DateTimeKind.Utc).AddTicks(1988),
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("d75a52f6-813d-4dd5-b759-be87c43137d9"),
                            CreatedDate = new DateTime(2022, 12, 15, 9, 26, 34, 428, DateTimeKind.Utc).AddTicks(1991),
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85becf9f-7834-4472-a095-79a31c6930d9"),
                            CreatedDate = new DateTime(2022, 12, 15, 9, 26, 34, 190, DateTimeKind.Utc).AddTicks(7223),
                            EmailAddress = "SonicHedgehog@gmail.com",
                            Password = "$2a$11$Lr/dzNnJ3YXGpn.V1rFUQelJCaZ/s1YuYeUzlTh9lyQ2f7iXlyrMq",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("8aa7be75-8787-467c-abc0-2da4fb96cc06"),
                            Username = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("e0bbd88a-6e56-498d-b137-eee4d17ef13b"),
                            CreatedDate = new DateTime(2022, 12, 15, 9, 26, 34, 307, DateTimeKind.Utc).AddTicks(535),
                            EmailAddress = "User@gmail.com",
                            Password = "$2a$11$xCwdNGMtpNCChX2bA6.82ex97Uyu.5kpqnJFf.dv4DOFbbVRKZIiK",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("d75a52f6-813d-4dd5-b759-be87c43137d9"),
                            Username = "User"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.UserEntity", b =>
                {
                    b.HasOne("Repositories.Entities.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Repositories.Entities.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
